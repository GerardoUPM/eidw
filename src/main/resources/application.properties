server.port=${port:8089}
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/edsssdb?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=edsss_usr
spring.datasource.password=NewPwd2017

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=validation
# ===============================
# = TVP API cambiar
# ===============================
URI.TVP.API = http://localhost:8083/tvp/api
URI.METAMAP.API = http://localhost:8084/metamap/api

# ===============================
# = FEIGN NETFLIX
# ===============================
#CLAVE PARA QUE FUNCIONE FEIGN
hystrix.command.default.execution.timeout.enabled = false

ribbon.ReadTimeOut=172800000
ribbon.ConnectTimeOut=172800000
ribbon.MaxAutoRetries=10

# ===============================
# = TOMCAT
# ===============================
# Number of ms to wait before throwing an exception if no connection is available.
#spring.datasource.tomcat.max-wait=10000
# Maximum number of active connections that can be allocated from this pool at the same time.
#spring.datasource.tomcat.max-active=50
# Validate the connection before borrowing it from the pool.
#spring.datasource.tomcat.test-on-borrow=true

my.service.client.disease_album.name = ${SERVICE_CLIENT_DISEASE_ALBUM_NAME:diseaseAlbum-client}
my.service.client.disease_album.url = ${SERVICE_CLIENT_DISEASE_ALBUM_URL:http://localhost:8080/api/disease_album}
my.service.client.disease_album.path.last = ${SERVICE_CLIENT_DISEASE_ALBUM_PATH_LAST:/last}
my.service.client.disease_album.path.get = ${SERVICE_CLIENT_DISEASE_ALBUM_PATH_GET:/get}

my.service.client.metamap.name = ${SERVICE_CLIENT_METAMAP_NAME:metamap-client}
my.service.client.metamap.url = ${SERVICE_CLIENT_METAMAP_URL:http://localhost:8081/api/metamap}
my.service.client.metamap.path = ${SERVICE_CLIENT_METAMAP_PATH:/concepts_found}

my.service.client.tvp.name = ${SERVICE_CLIENT_METAMAP_NAME:tvp-client}
my.service.client.tvp.url = ${SERVICE_CLIENT_METAMAP_URL:http://localhost:8082/api/tvp}
my.service.client.tvp.path = ${SERVICE_CLIENT_METAMAP_PATH:/concepts_validated}

my.service.dialist.name = ${DISALIST_SERVICE_NAME:DISEASES AVAILABLE LIST API REST}
my.service.dialist.code = ${DISALIST_SERVICE_CODE:SE010}
my.service.metamap.name = ${METAMAP_SERVICE_NAME:METAMAP API REST}
my.service.metamap.code = ${METAMAP_SERVICE_CODE:SE007}
my.service.tvp.name = ${TVP_SERVICE_NAME:TVP API REST}
my.service.tvp.code = ${TVP_SERVICE_CODE:SE006}
