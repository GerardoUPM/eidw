server.port=${DSVP_SERVICE_PORT:8089}
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=${EDSSS_DB_DATASOURCE_URL:jdbc:mysql://localhost:3306/edsssdb?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8}
#spring.datasource.url=jdbc:mysql:138.4.130.6:13062/edsssdb?useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=${EDSSS_DB_MYSQL_USER:edsss_usr}
spring.datasource.password=${EDSSS_DB_MYSQL_PASSWORD:NewPwd2017}

spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.time-between-eviction-runs-millis=60000

#spring.jpa.properties.hibernate.c3p0.


#spring.datasource.url=jdbc:mysql://localhost:3306/edsssdb?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.database=mysql
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto=validate
#update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=validation


# ===============================
# = FEIGN NETFLIX
# ===============================
spring.application.name=feignclient
#CLAVE PARA QUE FUNCIONE FEIGN
spring.cloud.config.enabled = true

feign.hystrix.enabled=false
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.default.execution.timeout.enabled = false
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=259200000
#hystrix.command.default.circuitBreaker.enabled=true
#hystrix.command.default.circuitBreaker.requestVolumeThreshold=2


# ===============================
# = TOMCAT
# ===============================
#para que no muera la conexión, cuando tarda más de 8 horas aprox (mysql default wait-timeout=8 hours (28800 seconds [min=1, max=31536000]))
#para versiones spring boot mayores a la 1.4.1
#spring.datasource.tomcat.test-while-idle=true
#spring.datasource.tomcat.test-on-borrow=true
#spring.datasource.tomcat.time-between-eviction-runs-millis=60000
#spring.datasource.tomcat.validation-query=SELECT 1

#spring.datasource.test-while-idle=true
#spring.datasource.test-on-borrow=true
#spring.datasource.time-between-eviction-runs-millis=60000
#spring.datasource.validation-query=SELECT 1
#spring.datasource.log-validation-errors=true
#spring.datasource.testWhileIdle = true
#spring.datasource.timeBetweenEvictionRunsMillis = 60000
#spring.datasource.validationQuery = SELECT 1


# Number of ms to wait before throwing an exception if no connection is available.
#spring.datasource.tomcat.max-wait=10000
# Maximum number of active connections that can be allocated from this pool at the same time.
#spring.datasource.tomcat.max-active=50
# Validate the connection before borrowing it from the pool.
#spring.datasource.tomcat.test-on-borrow=true

my.service.client.disease_album.name = ${DISALBUM_SERVICE_CLIENT_NAME:diseaseAlbum-client}
#my.service.client.disease_album.url = ${DISALBUM_SERVICE_CLIENT_URL:http://localhost:8088/api/disease_album}
my.service.client.disease_album.url = ${DISALBUM_SERVICE_CLIENT_URL:138.4.130.6:11066/api/disease_album}
my.service.client.disease_album.path.last = ${DISALBUM_SERVICE_LAST_PATH:/last}
my.service.client.disease_album.path.get = ${DISALBUM_SERVICE_GET_PATH:/get}

my.service.client.metamap.name = ${METAMAP_SERVICE_CLIENT_NAME:metamap-client}
my.service.client.metamap.url = ${METAMAP_SERVICE_CLIENT_URL:http://localhost:8081/api/metamap}
my.service.client.metamap.path = ${METAMAP_SERVICE_FILTER_PATH:/filter}

my.service.client.tvp.name = ${TVP_SERVICE_CLIENT_NAME:tvp-client}
my.service.client.tvp.url = ${TVP_SERVICE_CLIENT_URL:http://localhost:8082/api/tvp}
my.service.client.tvp.path = ${TVP_SERVICE_VALIDATE_PATH:/validate}

my.service.client.pmte.name = ${PMTE_SERVICE_CLIENT_NAME:pmte-client}
my.service.client.pmte.url = ${PMTE_SERVICE_CLIENT_URL:138.4.130.6:11069/api/extract/pubmed}
my.service.client.pmte.texts.path = ${PMTE_SERVICE_GET_TEXTS_PATH:/texts}
my.service.client.pmte.texts.json.path = ${WTE_SERVICE_GET_TEXTS_JSON_PATH:/texts/json}


my.service.dialist.name = ${DISALBUM_SERVICE_NAME:DISEASES AVAILABLE LIST API REST}
my.service.dialist.code = ${DISALBUM_SERVICE_CODE:SE010}
my.service.metamap.name = ${METAMAP_SERVICE_NAME:METAMAP API REST}
my.service.metamap.code = ${METAMAP_SERVICE_CODE:SE007}
my.service.tvp.name = ${TVP_SERVICE_NAME:TVP API REST}
my.service.tvp.code = ${TVP_SERVICE_CODE:SE006}
